{
  "populationSize": "Population size",
  "maxTreeDepth": "Max tree depth",
  "tournamentSize": "Tournament size",
  "crossoverProbability": "Crossover probability",
  "pointsWithInfo": "Points (last column is y)",
  "possibleLeaves": "Possible leaves",
  "problemType": "Problem type",
  "real": "Real",
  "integer": "Integer",
  "boolean": "Boolean",
  "createFirstGeneration": "Create first generation",
  "createNextGeneration": "Create next generation",
  "runNGenerations": "Run {{number}} generations",
  "numberOfGenerationsToRun": "Number of generations to run",
  "generation": "Generation",
  "code": "Code",
  "number": "Number",
  "function": "Function",
  "errorSquared": "Error squared",
  "showCode": "Show code",
  "globalBest": "Global best",
  "title": "Genetic programming",
  "restart": "Restart",
  "willBeRestarted": "(algorithm will be restarted with next generation creation)",
  "nodePenalty": "Complexity penalty",
  "createFirstGeneration_tooltip": "Creates a generation of random specimens, resets generation counter to 1",
  "createNextGeneration_tooltip": "",
  "runNGenerations_tooltip": "Runs number of generations specified in the field below",
  "restart_tooltip": "Next created generation will be random and generation counter will be reset",
  "populationSize_tooltip": "Number of specimens in a generation",
  "maxTreeDepth_tooltip": "",
  "tournamentSize_tooltip": "",
  "crossoverProbability_tooltip": "Probability of creating the next specimen(s) by crossover. Otherwise they are created by mutation.",
  "nodePenalty_tooltip": "Value added to fitness for every node (function or value) in equation tree of a function for sorting"
}
